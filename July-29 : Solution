2411. Smallest Subarrays With Maximum Bitwise OR
Solution:
from typing import List

class Solution:
    def smallestSubarrays(self, nums: List[int]) -> List[int]:
        n = len(nums)
        last = [-1] * 32   # last position of each bit
        ans = [1] * n
        
        for i in range(n - 1, -1, -1):
            for b in range(32):
                if (nums[i] >> b) & 1:
                    last[b] = i
            
            # find farthest index we must include
            far = i
            for b in range(32):
                if last[b] != -1:
                    far = max(far, last[b])
            ans[i] = far - i + 1
        
        return ans
